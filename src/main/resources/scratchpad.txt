-- Table: facilities
CREATE TABLE facilities (
    id uuid NOT NULL,
    name text NOT NULL,
    is_internal bool NOT NULL,
    is_active bool NOT NULL,
    region text NOT NULL,
    workflows _text NOT NULL,
    jobs _text NOT NULL,
    languages _text NOT NULL,
    contact_emails _text NOT NULL,
    created_at timestamp,
    PRIMARY KEY (id));

-- Table: asset
CREATE TABLE asset (
    asset_id varchar(255) NOT NULL,
    asset_type_id int4 NOT NULL,
    active bool NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    owning_network_id int4,
    PRIMARY KEY (asset_id),
    FOREIGN KEY (asset_type_id) REFERENCES asset_type(asset_type_id),
    FOREIGN KEY (owning_network_id) REFERENCES network(network_id));

-- Table: asset_aud
CREATE TABLE asset_aud (
    asset_id varchar(255),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    asset_type_id int4,
    owning_network_id int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: asset_metadata
CREATE TABLE asset_metadata (
    asset_id varchar(255) NOT NULL,
    asset_metadata_type_id int4 NOT NULL,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (asset_id),
    FOREIGN KEY (asset_id) REFERENCES asset(asset_id),
    FOREIGN KEY (asset_metadata_type_id) REFERENCES asset_metadata_type(asset_metadata_type_id));

-- Table: asset_metadata_aud
CREATE TABLE asset_metadata_aud (
    asset_id varchar(255),
    asset_metadata_type_id int4,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: asset_metadata_type
CREATE TABLE asset_metadata_type (
    asset_metadata_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool NOT NULL,
    sort_order int4,
    PRIMARY KEY (asset_metadata_type_id));

-- Table: asset_type
CREATE TABLE asset_type (
    asset_type_id int4 NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (asset_type_id));

-- Table: assignee
CREATE TABLE assignee (
    assignee_id serial NOT NULL,
    display_name varchar(250),
    email varchar(250),
    rally_id varchar(150),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    is_active bool,
    operational_region_id int4,
    rally_email varchar(150),
    PRIMARY KEY (assignee_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id));

-- Table: assignee_aud
CREATE TABLE assignee_aud (
    assignee_id int4,
    display_name varchar(250),
    email varchar(250),
    rally_id varchar(128),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    is_active bool,
    operational_region_id int4,
    rally_email varchar(150),
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: assignee_workflow_config
CREATE TABLE assignee_workflow_config (
    assignee_workflow_config_id serial NOT NULL,
    assignee_id int4 NOT NULL,
    workflow_type_id int4 NOT NULL,
    active bool,
    PRIMARY KEY (assignee_workflow_config_id),
    FOREIGN KEY (assignee_id) REFERENCES assignee(assignee_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: bulk_import_processed_workorders
CREATE TABLE bulk_import_processed_workorders (
    processed_id int4 NOT NULL,
    key varchar(500),
    case_uuid uuid,
    media_id varchar(100),
    work_type varchar(255),
    language varchar(255),
    work_flow_type varchar(100),
    distribution varchar(500),
    status varchar(255),
    validation_errrors varchar(1000),
    uploaded_by varchar(255),
    created_time timestamp,
    work_order_id uuid,
    work_order_updated_details varchar(1000),
    PRIMARY KEY (processed_id));

-- Table: bulk_update_processed_workorders
CREATE TABLE bulk_update_processed_workorders (
    processed_id int4 NOT NULL,
    key varchar(15),
    status varchar(15),
    season_title varchar(255),
    work_order_id uuid,
    case_uuid uuid,
    media_id varchar(100),
    work_flow_type varchar(100),
    validation_errrors varchar(1000),
    created_time timestamp,
    internal_work_order_id int4,
    case_id varchar(300),
    PRIMARY KEY (processed_id));

-- Table: caption_ingest_aud
CREATE TABLE caption_ingest_aud (
    caption_ingest_aud_id serial NOT NULL,
    unique_req_id varchar(500),
    result varchar(1000),
    uploaded_by varchar(255),
    created_time timestamp,
    PRIMARY KEY (caption_ingest_aud_id));

-- Table: caption_ingest_files_aud
CREATE TABLE caption_ingest_files_aud (
    caption_ingest_files_aud_id serial NOT NULL,
    caption_ingest_aud_id int4 NOT NULL,
    paid_id varchar(500),
    s3_url varchar(500),
    workorder_id varchar(500),
    asset_id varchar(500),
    PRIMARY KEY (caption_ingest_files_aud_id),
    FOREIGN KEY (caption_ingest_aud_id) REFERENCES caption_ingest_aud(caption_ingest_aud_id));

-- Table: circumstance
CREATE TABLE circumstance (
    circumstance_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (circumstance_id));

-- Table: circumstance_group
CREATE TABLE circumstance_group (
    circumstance_group_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (circumstance_group_id));

-- Table: circumstance_group_def
CREATE TABLE circumstance_group_def (
    circumstance_group_def_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    circumstance_group_id int4 NOT NULL,
    circumstance_id int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (circumstance_group_def_id),
    FOREIGN KEY (circumstance_id) REFERENCES circumstance(circumstance_id),
    FOREIGN KEY (circumstance_group_id) REFERENCES circumstance_group(circumstance_group_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: circumstance_rule
CREATE TABLE circumstance_rule (
    circumstance_rule_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    rule_id int4 NOT NULL,
    rank int4,
    circumstance_id int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    name varchar(200),
    active bool,
    PRIMARY KEY (circumstance_rule_id),
    FOREIGN KEY (circumstance_id) REFERENCES circumstance(circumstance_id),
    FOREIGN KEY (rule_id) REFERENCES rule(rule_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: circumstance_rule_condition
CREATE TABLE circumstance_rule_condition (
    circumstance_rule_condition_id serial NOT NULL,
    circumstance_rule_id int4 NOT NULL,
    field varchar(255),
    operator varchar(128),
    value varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (circumstance_rule_condition_id),
    FOREIGN KEY (circumstance_rule_id) REFERENCES circumstance_rule(circumstance_rule_id));

-- Table: circumstance_rule_parameters
CREATE TABLE circumstance_rule_parameters (
    circumstance_rule_parameters_id serial NOT NULL,
    circumstance_rule_id int4 NOT NULL,
    field varchar(255),
    value varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool NOT NULL,
    PRIMARY KEY (circumstance_rule_parameters_id),
    FOREIGN KEY (circumstance_rule_id) REFERENCES circumstance_rule(circumstance_rule_id));

-- Table: clip_data
CREATE TABLE clip_data (
    clip_id uuid NOT NULL,
    work_order_id uuid,
    approved_status bool,
    clip varchar(1000),
    program_id uuid,
    edit_id uuid,
    cut_id uuid,
    logical_inventory_registration bool,
    tangible_inventory_registration bool,
    PRIMARY KEY (clip_id));

-- Table: completion_condition
CREATE TABLE completion_condition (
    completion_condition_id serial NOT NULL,
    workflow_task_id int4 NOT NULL,
    field varchar(255),
    operator varchar(24),
    value varchar(255),
    PRIMARY KEY (completion_condition_id),
    FOREIGN KEY (workflow_task_id) REFERENCES workflow_task(workflow_task_id));

-- Table: contact
CREATE TABLE contact (
    contact_id serial NOT NULL,
    name varchar(255),
    email varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (contact_id));

-- Table: contact_aud
CREATE TABLE contact_aud (
    contact_id int4,
    name varchar(255),
    email varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: currency
CREATE TABLE currency (
    currency_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    description varchar(255),
    sort_order int4,
    PRIMARY KEY (currency_id));

-- Table: currency_aud
CREATE TABLE currency_aud (
    currency_id int4,
    code varchar(40),
    display_name varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: cut_type
CREATE TABLE cut_type (
    cut_type_id serial NOT NULL,
    cut_type varchar(255),
    cut_sub_type varchar(255),
    PRIMARY KEY (cut_type_id));

-- Table: databasechangelog
CREATE TABLE databasechangelog (
    id varchar(255) NOT NULL,
    author varchar(255) NOT NULL,
    filename varchar(255) NOT NULL,
    dateexecuted timestamp NOT NULL,
    orderexecuted int4 NOT NULL,
    exectype varchar(10) NOT NULL,
    md5sum varchar(35),
    description varchar(255),
    comments varchar(255),
    tag varchar(255),
    liquibase varchar(20),
    contexts varchar(255),
    labels varchar(255),
    deployment_id varchar(10));

-- Table: databasechangeloglock
CREATE TABLE databasechangeloglock (
    id int4 NOT NULL,
    locked bool NOT NULL,
    lockgranted timestamp,
    lockedby varchar(255),
    PRIMARY KEY (id));

-- Table: default_config
CREATE TABLE default_config (
    default_config_id serial NOT NULL,
    distribution_id int4,
    workflow_type_id int4 NOT NULL,
    job_type_id int4,
    sub_edit_type_id int4,
    facility_id int4,
    assignee_id int4,
    operational_group_id int4,
    work_order_status_id int4,
    language_id int4,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    auto_create bool,
    due_date_type varchar(20),
    allowed_prefixes varchar(500),
    network_id int4,
    additional_service_id int4,
    alternate_job_types varchar(255),
    PRIMARY KEY (default_config_id),
    FOREIGN KEY (assignee_id) REFERENCES assignee(assignee_id),
    FOREIGN KEY (distribution_id) REFERENCES distribution(distribution_id),
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id),
    FOREIGN KEY (network_id) REFERENCES network(network_id),
    FOREIGN KEY (operational_group_id) REFERENCES operational_group(operational_group_id),
    FOREIGN KEY (sub_edit_type_id) REFERENCES sub_edit_type(sub_edit_type_id),
    FOREIGN KEY (additional_service_id) REFERENCES sub_type(sub_type_id),
    FOREIGN KEY (work_order_status_id) REFERENCES work_order_status(work_order_status_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: default_config_aud
CREATE TABLE default_config_aud (
    default_config_id int4,
    distribution_id int4,
    workflow_type_id int4,
    job_type_id int4,
    sub_edit_type_id int4,
    facility_id int4,
    assignee_id int4,
    operational_group_id int4,
    work_order_status_id int4,
    language_id int4,
    active bool,
    auto_create bool,
    allowed_prefixes varchar(100),
    due_date_type varchar(100),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    network_id int4,
    additional_service_id int4,
    alternate_job_types varchar(255),
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: default_config_filter
CREATE TABLE default_config_filter (
    default_config_filter_id int4 NOT NULL,
    default_config_id int4 NOT NULL,
    default_config_filter_type_id int4 NOT NULL,
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (default_config_filter_id),
    FOREIGN KEY (default_config_filter_type_id) REFERENCES default_config_filter_type(default_config_filter_type_id));

-- Table: default_config_filter_type
CREATE TABLE default_config_filter_type (
    default_config_filter_type_id int4 NOT NULL,
    code varchar(255),
    value varchar(255),
    active bool,
    PRIMARY KEY (default_config_filter_type_id));

-- Table: default_config_metadata
CREATE TABLE default_config_metadata (
    default_config_id int4 NOT NULL,
    default_config_metadata_type_id int4 NOT NULL,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (default_config_id),
    FOREIGN KEY (default_config_id) REFERENCES default_config(default_config_id),
    FOREIGN KEY (default_config_metadata_type_id) REFERENCES default_config_metadata_type(default_config_metadata_type_id));

-- Table: default_config_metadata_aud
CREATE TABLE default_config_metadata_aud (
    default_config_id int4,
    default_config_metadata_type_id int4,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    prefixes varchar(2147483647),
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: default_config_metadata_type
CREATE TABLE default_config_metadata_type (
    default_config_metadata_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (default_config_metadata_type_id));

-- Table: distribution
CREATE TABLE distribution (
    distribution_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    distribution_type varchar(40),
    distribution_status varchar(40),
    operational_region_id int4,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    external_id varchar(100),
    external_name varchar(255),
    external_code varchar(40),
    pss_name varchar(255),
    pss_code varchar(40),
    market_id varchar(255),
    pss_market_name varchar(255),
    market_display_name varchar(255),
    do_not_display bool,
    network_id int4,
    PRIMARY KEY (distribution_id),
    FOREIGN KEY (network_id) REFERENCES network(network_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id));

-- Table: distribution_aud
CREATE TABLE distribution_aud (
    distribution_id int4,
    code varchar(40),
    display_name varchar(255),
    distribution_type varchar(40),
    distribution_status varchar(40),
    operational_group_id int4,
    operational_region_id int4,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    external_id varchar(100),
    pss_name varchar(255),
    pss_code varchar(40),
    market_display_name varchar(255),
    market_id varchar(255),
    pss_market_name varchar(255),
    do_not_display bool,
    network_id int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: distribution_refine_defaults
CREATE TABLE distribution_refine_defaults (
    distribution_refine_defaults_id serial NOT NULL,
    distribution_id int4 NOT NULL,
    workflow_id int4 NOT NULL,
    PRIMARY KEY (distribution_refine_defaults_id),
    FOREIGN KEY (distribution_id) REFERENCES distribution(distribution_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: facility
CREATE TABLE facility (
    facility_id serial NOT NULL,
    display_name varchar(255),
    facility_location varchar(40),
    billing_code varchar(255),
    facility_status varchar(40),
    currency_id int4,
    contact_id int4,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    is_languaging bool,
    is_video_edit bool,
    facility_uuid uuid,
    manual_update bool,
    is_dim bool NOT NULL,
    PRIMARY KEY (facility_id),
    FOREIGN KEY (contact_id) REFERENCES contact(contact_id),
    FOREIGN KEY (currency_id) REFERENCES currency(currency_id));

-- Table: facility_aud
CREATE TABLE facility_aud (
    facility_id int4,
    display_name varchar(255),
    facility_location varchar(40),
    billing_code varchar(255),
    facility_status varchar(40),
    currency_id int4,
    operational_region_id int4,
    contact_id int4,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    is_languaging bool,
    is_video_edit bool,
    facility_uuid uuid,
    manual_update bool,
    is_dim bool NOT NULL,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: facility_capability
CREATE TABLE facility_capability (
    facility_capability_id serial NOT NULL,
    facility_id int4 NOT NULL,
    language_id int4 NOT NULL,
    job_type_id int4 NOT NULL,
    performance_index float8,
    capacity float8,
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id));

-- Table: facility_contact
CREATE TABLE facility_contact (
    facility_id int4 NOT NULL,
    contact_id int4 NOT NULL,
    PRIMARY KEY (facility_id),
    FOREIGN KEY (contact_id) REFERENCES contact(contact_id),
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id));

-- Table: facility_language
CREATE TABLE facility_language (
    facility_id int4 NOT NULL,
    language_id int4 NOT NULL,
    PRIMARY KEY (facility_id),
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id));

-- Table: facility_language_aud
CREATE TABLE facility_language_aud (
    facility_id int4,
    language_id int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: facility_operational_region
CREATE TABLE facility_operational_region (
    facility_id int4 NOT NULL,
    operational_region_id int4 NOT NULL,
    PRIMARY KEY (facility_id),
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id));

-- Table: facility_operational_region_aud
CREATE TABLE facility_operational_region_aud (
    facility_id int4,
    operationalr_egion_id int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: inventory_lang_xre
CREATE TABLE inventory_lang_xre (
    language_id int4 NOT NULL,
    mdd_language varchar(100),
    component varchar(200),
    FOREIGN KEY (language_id) REFERENCES language(language_id));

-- Table: job_sub_edit_type
CREATE TABLE job_sub_edit_type (
    job_sub_edit_type_id serial NOT NULL,
    job_type_id int4 NOT NULL,
    sub_edit_type_id int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (job_sub_edit_type_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (sub_edit_type_id) REFERENCES sub_edit_type(sub_edit_type_id));

-- Table: job_type
CREATE TABLE job_type (
    job_type_id serial NOT NULL,
    code varchar(50) NOT NULL,
    display_name varchar(255),
    description varchar(500),
    active bool NOT NULL,
    sort_order int4,
    rally_job_type varchar(255),
    PRIMARY KEY (job_type_id));

-- Table: job_type_sub_type
CREATE TABLE job_type_sub_type (
    job_type_id int4 NOT NULL,
    sub_type_id int4 NOT NULL,
    active bool,
    operational_region_code varchar(255) NOT NULL,
    PRIMARY KEY (job_type_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (sub_type_id) REFERENCES sub_type(sub_type_id));

-- Table: language
CREATE TABLE language (
    language_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    legacy_lang_code varchar(40),
    is_written varchar(255),
    is_spoken varchar(255),
    PRIMARY KEY (language_id));

-- Table: manifestation_processing_log
CREATE TABLE manifestation_processing_log (
    id bigserial NOT NULL,
    timestamp timestamp,
    manifestation_type varchar(255),
    edit_id varchar(255),
    alternate_id varchar(255),
    primary_cut_edit_id varchar(255),
    status varchar(50),
    error_code varchar(100),
    error_message varchar(1000),
    raw_manifestation text,
    PRIMARY KEY (id));

-- Table: ml_model
CREATE TABLE ml_model (
    model_id int4 NOT NULL,
    code varchar(100),
    name varchar(100),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (model_id));

-- Table: network
CREATE TABLE network (
    network_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    operational_region_id int4 NOT NULL,
    delivery_location_id int4 NOT NULL,
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    description varchar(500),
    pss_network_id int4,
    PRIMARY KEY (network_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id),
    FOREIGN KEY (delivery_location_id) REFERENCES sub_type(sub_type_id));

-- Table: next_id
CREATE TABLE next_id (
    max int4);

-- Table: note_category
CREATE TABLE note_category (
    note_category_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool NOT NULL,
    sort_order int4,
    PRIMARY KEY (note_category_id));

-- Table: notification_subscription
CREATE TABLE notification_subscription (
    notification_subscription_id serial NOT NULL,
    workflow_id int4 NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    all_fields bool,
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (notification_subscription_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: notification_subscription_aud
CREATE TABLE notification_subscription_aud (
    notification_subscription_id int4,
    workflow_id int4,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    all_fields bool,
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: notification_subscription_field
CREATE TABLE notification_subscription_field (
    notification_subscription_id int4 NOT NULL,
    field varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    FOREIGN KEY (notification_subscription_id) REFERENCES notification_subscription(notification_subscription_id));

-- Table: notification_subscription_field_aud
CREATE TABLE notification_subscription_field_aud (
    notification_subscription_id int4,
    field varchar(255),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: notification_subscription_recip
CREATE TABLE notification_subscription_recip (
    notification_subscription_id int4 NOT NULL,
    assignee_id int4,
    grouping_id int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    FOREIGN KEY (assignee_id) REFERENCES assignee(assignee_id),
    FOREIGN KEY (notification_subscription_id) REFERENCES notification_subscription(notification_subscription_id));

-- Table: notification_subscription_recip_aud
CREATE TABLE notification_subscription_recip_aud (
    notification_subscription_id int4,
    assignee_id int4,
    grouping_id int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: operational_group
CREATE TABLE operational_group (
    operational_group_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    operational_group_status varchar(40),
    contact_id int4,
    is_languaging bool,
    is_video_edit bool,
    operational_region_id int4,
    is_dim bool NOT NULL,
    PRIMARY KEY (operational_group_id),
    FOREIGN KEY (contact_id) REFERENCES contact(contact_id));

-- Table: operational_group_aud
CREATE TABLE operational_group_aud (
    operational_group_id int4,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    operational_group_status varchar(40),
    contact_id int4,
    is_languaging bool,
    is_video_edit bool,
    operational_region_id int4,
    is_dim bool NOT NULL,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: operational_group_contact
CREATE TABLE operational_group_contact (
    operational_group_id int4 NOT NULL,
    contact_id int4 NOT NULL,
    PRIMARY KEY (operational_group_id),
    FOREIGN KEY (contact_id) REFERENCES contact(contact_id),
    FOREIGN KEY (operational_group_id) REFERENCES operational_group(operational_group_id));

-- Table: operational_region
CREATE TABLE operational_region (
    operational_region_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    notification_preference varchar(100),
    PRIMARY KEY (operational_region_id));

-- Table: operational_region_aud
CREATE TABLE operational_region_aud (
    operational_region_id int4,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: operational_region_contact
CREATE TABLE operational_region_contact (
    operational_region_id int4 NOT NULL,
    contact_id int4 NOT NULL,
    PRIMARY KEY (operational_region_id),
    FOREIGN KEY (contact_id) REFERENCES contact(contact_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id));

-- Table: permissions
CREATE TABLE permissions (
    permission_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    role varchar(128),
    business_function varchar(128),
    has_access bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (permission_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: reference_material
CREATE TABLE reference_material (
    reference_material_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    PRIMARY KEY (reference_material_id));

-- Table: reference_work_type
CREATE TABLE reference_work_type (
    reference_work_type_id serial NOT NULL,
    work_type_name varchar(75),
    job_type_id int4 NOT NULL,
    job_type_code varchar(50),
    component_type varchar(20),
    id_change bool,
    active bool,
    PRIMARY KEY (reference_work_type_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id));

-- Table: reference_work_type_reference_material
CREATE TABLE reference_work_type_reference_material (
    reference_work_type_id int4 NOT NULL,
    reference_material_id int4 NOT NULL,
    operational_region_id int4 NOT NULL,
    type varchar(20) NOT NULL,
    recut bool,
    required bool,
    PRIMARY KEY (reference_work_type_id),
    FOREIGN KEY (reference_material_id) REFERENCES reference_material(reference_material_id),
    FOREIGN KEY (operational_region_id) REFERENCES reference_material(reference_material_id),
    FOREIGN KEY (reference_work_type_id) REFERENCES reference_work_type(reference_work_type_id));

-- Table: revinfo
CREATE TABLE revinfo (
    rev serial NOT NULL,
    revtstmp int8,
    PRIMARY KEY (rev));

-- Table: rule
CREATE TABLE rule (
    rule_id serial NOT NULL,
    code varchar(100),
    display_name varchar(255),
    description text,
    version int4,
    rule_type varchar(40),
    rule_value text,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (rule_id));

-- Table: shedlock
CREATE TABLE shedlock (
    name varchar(64) NOT NULL,
    lock_until timestamp,
    locked_at timestamp,
    locked_by varchar(100),
    PRIMARY KEY (name));

-- Table: skip_condition
CREATE TABLE skip_condition (
    skip_condition_id serial NOT NULL,
    workflow_task_id int4 NOT NULL,
    field varchar(255),
    operator varchar(24),
    value varchar(255),
    PRIMARY KEY (skip_condition_id),
    FOREIGN KEY (workflow_task_id) REFERENCES workflow_task(workflow_task_id));

-- Table: source_task
CREATE TABLE source_task (
    source_task_id serial NOT NULL,
    work_order_id uuid NOT NULL,
    case_id varchar(300),
    cut_id varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    qc_status varchar(255),
    case_uuid varchar(255),
    cut_type varchar(255),
    instance_id varchar(300),
    PRIMARY KEY (source_task_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id));

-- Table: spring_session
CREATE TABLE spring_session (
    primary_id bpchar NOT NULL,
    session_id bpchar NOT NULL,
    creation_time int8 NOT NULL,
    last_access_time int8 NOT NULL,
    max_inactive_interval int4 NOT NULL,
    expiry_time int8 NOT NULL,
    principal_name varchar(100),
    PRIMARY KEY (primary_id));

-- Table: spring_session_attributes
CREATE TABLE spring_session_attributes (
    session_primary_id bpchar NOT NULL,
    attribute_name varchar(200) NOT NULL,
    attribute_bytes bytea NOT NULL,
    PRIMARY KEY (session_primary_id),
    FOREIGN KEY (session_primary_id) REFERENCES spring_session(primary_id));

-- Table: standard_duration
CREATE TABLE standard_duration (
    standard_duration_id serial NOT NULL,
    key varchar(200),
    hours int4,
    PRIMARY KEY (standard_duration_id));

-- Table: sub_edit_type
CREATE TABLE sub_edit_type (
    sub_edit_type_id serial NOT NULL,
    code varchar(200),
    display_name varchar(300),
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (sub_edit_type_id));

-- Table: sub_type
CREATE TABLE sub_type (
    sub_type_id serial NOT NULL,
    sub_type_category_id int4 NOT NULL,
    code varchar(200),
    display_name varchar(300),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (sub_type_id),
    FOREIGN KEY (sub_type_category_id) REFERENCES sub_type_category(sub_type_category_id));

-- Table: sub_type_category
CREATE TABLE sub_type_category (
    sub_type_category_id serial NOT NULL,
    code varchar(200),
    display_name varchar(300),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (sub_type_category_id));

-- Table: subscription_condition
CREATE TABLE subscription_condition (
    subscription_condition_id serial NOT NULL,
    workflow_subscription_id int4 NOT NULL,
    field varchar(255),
    operator varchar(128),
    value varchar(255),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    workflow_input_id int4,
    workflow_id int4,
    name varchar(50),
    type varchar(50),
    is_key_field bool,
    default_value varchar(50),
    workflow_task_id int4,
    key_ordinal varchar(50),
    json_path varchar(50),
    PRIMARY KEY (subscription_condition_id),
    FOREIGN KEY (workflow_subscription_id) REFERENCES workflow_subscription(workflow_subscription_id));

-- Table: subscription_condition_aud
CREATE TABLE subscription_condition_aud (
    workflow_subscription_id int4,
    field varchar(255),
    operator varchar(128),
    value varchar(255),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    subscription_condition_id int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: subscription_input
CREATE TABLE subscription_input (
    subscription_input_id serial NOT NULL,
    workflow_input_id int4 NOT NULL,
    workflow_subscription_id int4 NOT NULL,
    field varchar(250),
    value varchar(250),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (subscription_input_id),
    FOREIGN KEY (workflow_input_id) REFERENCES workflow_input(workflow_input_id),
    FOREIGN KEY (workflow_subscription_id) REFERENCES workflow_subscription(workflow_subscription_id));

-- Table: subscription_input_aud
CREATE TABLE subscription_input_aud (
    workflow_input_id int4,
    workflow_subscription_id int4,
    field varchar(250),
    value varchar(250),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: subscription_router
CREATE TABLE subscription_router (
    subscription_router_id serial NOT NULL,
    workflow_subscription_id int4 NOT NULL,
    field varchar(255),
    operator varchar(128),
    value varchar(255),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    routing_key varchar(200),
    PRIMARY KEY (subscription_router_id),
    FOREIGN KEY (workflow_subscription_id) REFERENCES workflow_subscription(workflow_subscription_id));

-- Table: subscription_router_aud
CREATE TABLE subscription_router_aud (
    subscription_router_id int4,
    workflow_subscription_id int4,
    field varchar(255),
    operator varchar(128),
    value varchar(255),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    routing_key varchar(200),
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: task
CREATE TABLE task (
    task_id serial NOT NULL,
    task_type_id int4 NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (task_id),
    FOREIGN KEY (task_type_id) REFERENCES task_type(task_type_id));

-- Table: task_aud
CREATE TABLE task_aud (
    task_id int4,
    task_type_id int4,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: task_exec
CREATE TABLE task_exec (
    task_exec_id serial NOT NULL,
    work_order_id uuid NOT NULL,
    workflow_task_id int4 NOT NULL,
    task_status_id int4 NOT NULL,
    assignee_id int4,
    assigner varchar(128),
    due_date timestamp,
    priority int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    schedule_change varchar(100),
    is_assigned varchar(100),
    complexity_tier varchar(100),
    PRIMARY KEY (task_exec_id),
    FOREIGN KEY (assignee_id) REFERENCES assignee(assignee_id),
    FOREIGN KEY (task_status_id) REFERENCES task_status(task_status_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id),
    FOREIGN KEY (workflow_task_id) REFERENCES workflow_task(workflow_task_id));

-- Table: task_exec_aud
CREATE TABLE task_exec_aud (
    task_exec_id int4,
    work_order_id uuid,
    workflow_task_id int4,
    task_status_id int4,
    assignee_id int4,
    assigner varchar(128),
    due_date timestamp,
    priority int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: task_exec_metadata
CREATE TABLE task_exec_metadata (
    task_exec_id int4 NOT NULL,
    task_exec_metadata_type_id int4 NOT NULL,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (task_exec_id),
    FOREIGN KEY (task_exec_id) REFERENCES task_exec(task_exec_id),
    FOREIGN KEY (task_exec_metadata_type_id) REFERENCES task_exec_metadata_type(task_exec_metadata_type_id));

-- Table: task_exec_metadata_aud
CREATE TABLE task_exec_metadata_aud (
    task_exec_metadata_type_id int4,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    task_exec_id int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: task_exec_metadata_type
CREATE TABLE task_exec_metadata_type (
    task_exec_metadata_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool NOT NULL,
    sort_order int4,
    PRIMARY KEY (task_exec_metadata_type_id));

-- Table: task_exec_note
CREATE TABLE task_exec_note (
    task_exec_note_id serial NOT NULL,
    note_category_id int4,
    task_exec_id int4 NOT NULL,
    note text,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (task_exec_note_id),
    FOREIGN KEY (note_category_id) REFERENCES note_category(note_category_id),
    FOREIGN KEY (task_exec_id) REFERENCES task_exec(task_exec_id));

-- Table: task_exec_note_aud
CREATE TABLE task_exec_note_aud (
    task_exec_note_id int4,
    note_category_id int4,
    task_exec_id int4,
    note text,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    active bool,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: task_status
CREATE TABLE task_status (
    task_status_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (task_status_id));

-- Table: task_status_workflow_type
CREATE TABLE task_status_workflow_type (
    task_status_workflow_type_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    task_status_id int4 NOT NULL,
    active bool,
    PRIMARY KEY (task_status_workflow_type_id),
    FOREIGN KEY (task_status_id) REFERENCES task_status(task_status_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: task_type
CREATE TABLE task_type (
    task_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (task_type_id));

-- Table: version_prefix
CREATE TABLE version_prefix (
    version_prefix_id serial NOT NULL,
    code varchar(10),
    display_name varchar(10),
    operational_region_id int4,
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (version_prefix_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id));

-- Table: work_order
CREATE TABLE work_order (
    work_order_id uuid NOT NULL,
    asset_id varchar(255) NOT NULL,
    workflow_id int4 NOT NULL,
    work_order_status_id int4 NOT NULL,
    due_date timestamp,
    priority int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    work_order_key varchar(512),
    internal_work_order_id serial,
    distribution_id int4,
    operational_group_id int4,
    assignee_id int4,
    job_type_id int4,
    facility_id int4,
    operational_region_id int4,
    language_id int4,
    additional_service int4,
    search_identifier_id int4,
    search_identifier_value varchar(100),
    prop_ep varchar(100),
    scrid varchar(100),
    show_code varchar(100),
    distribution_date varchar(100),
    property_id varchar(100),
    file_delivery int4,
    show_uuid varchar(100),
    replacement_status varchar(100),
    sub_edit_type int4,
    corporate_premiere_date varchar(100),
    region_long_name varchar(100),
    assessment_results varchar(100),
    rally_movie_name varchar(100),
    network_short_name varchar(100),
    schedule_change varchar(100),
    is_assigned varchar(100),
    cut_id varchar(100),
    rally_movie_id varchar(100),
    is_manual_due_date varchar(100),
    received_date varchar(100),
    cut_type varchar(100),
    accurate_player_url varchar(100),
    status_before_cancel varchar(100),
    include_edit bool NOT NULL,
    include_script bool NOT NULL,
    PRIMARY KEY (work_order_id),
    FOREIGN KEY (asset_id) REFERENCES asset(asset_id),
    FOREIGN KEY (search_identifier_id) REFERENCES asset_metadata_type(asset_metadata_type_id),
    FOREIGN KEY (assignee_id) REFERENCES assignee(assignee_id),
    FOREIGN KEY (distribution_id) REFERENCES distribution(distribution_id),
    FOREIGN KEY (facility_id) REFERENCES facility(facility_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id),
    FOREIGN KEY (operational_group_id) REFERENCES operational_group(operational_group_id),
    FOREIGN KEY (operational_region_id) REFERENCES operational_region(operational_region_id),
    FOREIGN KEY (sub_edit_type) REFERENCES sub_edit_type(sub_edit_type_id),
    FOREIGN KEY (additional_service) REFERENCES sub_type(sub_type_id),
    FOREIGN KEY (file_delivery) REFERENCES sub_type(sub_type_id),
    FOREIGN KEY (work_order_status_id) REFERENCES work_order_status(work_order_status_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: work_order_aud
CREATE TABLE work_order_aud (
    work_order_id uuid,
    asset_id varchar(255),
    workflow_id int4,
    work_order_status_id int4,
    due_date timestamp,
    priority int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    work_order_key varchar(512),
    internal_work_order_id int4,
    distribution_id int4,
    operational_group_id int4,
    job_type_id int4,
    assignee_id int4,
    facility_id int4,
    operational_region_id int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: work_order_metadata
CREATE TABLE work_order_metadata (
    work_order_id uuid NOT NULL,
    work_order_metadata_type_id int4 NOT NULL,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (work_order_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id),
    FOREIGN KEY (work_order_metadata_type_id) REFERENCES work_order_metadata_type(work_order_metadata_type_id));

-- Table: work_order_metadata_aud
CREATE TABLE work_order_metadata_aud (
    work_order_id uuid,
    work_order_metadata_type_id int4,
    value varchar(300),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: work_order_metadata_type
CREATE TABLE work_order_metadata_type (
    work_order_metadata_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool NOT NULL,
    sort_order int4,
    PRIMARY KEY (work_order_metadata_type_id));

-- Table: work_order_note
CREATE TABLE work_order_note (
    work_order_note_id serial NOT NULL,
    note_category_id int4,
    work_order_id uuid NOT NULL,
    note text,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    active bool,
    PRIMARY KEY (work_order_note_id),
    FOREIGN KEY (note_category_id) REFERENCES note_category(note_category_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id));

-- Table: work_order_note_aud
CREATE TABLE work_order_note_aud (
    work_order_note_id int4,
    note_category_id int4,
    work_order_id uuid,
    note text,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    active bool,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: work_order_status
CREATE TABLE work_order_status (
    work_order_status_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    PRIMARY KEY (work_order_status_id));

-- Table: work_order_status_workflow_type
CREATE TABLE work_order_status_workflow_type (
    work_order_status_workflow_type_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    work_order_status_id int4 NOT NULL,
    active bool,
    PRIMARY KEY (work_order_status_workflow_type_id),
    FOREIGN KEY (work_order_status_id) REFERENCES work_order_status(work_order_status_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: workflow
CREATE TABLE workflow (
    workflow_id serial NOT NULL,
    workflow_type_id int4 NOT NULL,
    code varchar(40),
    display_name varchar(255),
    version int4,
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (workflow_id),
    FOREIGN KEY (workflow_type_id) REFERENCES workflow_type(workflow_type_id));

-- Table: workflow_aud
CREATE TABLE workflow_aud (
    workflow_id int4,
    workflow_type_id int4,
    code varchar(40),
    display_name varchar(255),
    version int4,
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: workflow_completion_status
CREATE TABLE workflow_completion_status (
    workflow_completion_status_id serial NOT NULL,
    workflow_id int4 NOT NULL,
    work_order_status_id int4 NOT NULL,
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    PRIMARY KEY (workflow_completion_status_id),
    FOREIGN KEY (work_order_status_id) REFERENCES work_order_status(work_order_status_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: workflow_completion_status_aud
CREATE TABLE workflow_completion_status_aud (
    workflow_completion_status_id int4 NOT NULL,
    rev int4 NOT NULL,
    revtype int2,
    created_by varchar(255),
    created_time timestamp,
    last_modified_by varchar(255),
    last_modified_time timestamp,
    workflow_id int4,
    PRIMARY KEY (workflow_completion_status_id));

-- Table: workflow_input
CREATE TABLE workflow_input (
    workflow_input_id serial NOT NULL,
    workflow_id int4 NOT NULL,
    name varchar(128),
    type varchar(128),
    is_key_field bool,
    default_value varchar(128),
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    workflow_task_id int4,
    key_ordinal int4,
    json_path varchar(512),
    PRIMARY KEY (workflow_input_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id),
    FOREIGN KEY (workflow_task_id) REFERENCES workflow_task(workflow_task_id));

-- Table: workflow_input_aud
CREATE TABLE workflow_input_aud (
    workflow_input_id int4,
    workflow_id int4,
    name varchar(128),
    type varchar(128),
    is_key_field bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    workflow_task_id int4,
    default_value varchar(128),
    key_ordinal int4,
    json_path varchar(512),
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: workflow_job_types
CREATE TABLE workflow_job_types (
    workflow_id int4 NOT NULL,
    job_type_id int4 NOT NULL,
    PRIMARY KEY (workflow_id),
    FOREIGN KEY (job_type_id) REFERENCES job_type(job_type_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: workflow_subscription
CREATE TABLE workflow_subscription (
    workflow_subscription_id serial NOT NULL,
    workflow_id int4 NOT NULL,
    name varchar(300),
    action_type varchar(128),
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    subscription_condition_id int4,
    field varchar(50),
    operator varchar(50),
    value varchar(50),
    PRIMARY KEY (workflow_subscription_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: workflow_subscription_aud
CREATE TABLE workflow_subscription_aud (
    workflow_subscription_id int4,
    workflow_id int4,
    name varchar(128),
    action_type varchar(128),
    task_id int4,
    active bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: workflow_task
CREATE TABLE workflow_task (
    workflow_task_id serial NOT NULL,
    workflow_id int4 NOT NULL,
    task_id int4 NOT NULL,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    name varchar(512),
    sort_order int4,
    PRIMARY KEY (workflow_task_id),
    FOREIGN KEY (task_id) REFERENCES task(task_id),
    FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id));

-- Table: workflow_task_aud
CREATE TABLE workflow_task_aud (
    workflow_id int4,
    task_id int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    name varchar(512),
    workflow_task_id int4,
    sort_order int4,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: workflow_task_dependency
CREATE TABLE workflow_task_dependency (
    workflow_task_id int4 NOT NULL,
    depends_on int4 NOT NULL,
    FOREIGN KEY (workflow_task_id) REFERENCES workflow_task(workflow_task_id),
    FOREIGN KEY (depends_on) REFERENCES workflow_task(workflow_task_id));

-- Table: workflow_task_dependency_aud
CREATE TABLE workflow_task_dependency_aud (
    rev int4 NOT NULL,
    workflow_task_id int4 NOT NULL,
    depends_on int4 NOT NULL,
    revtype int2,
    PRIMARY KEY (rev));

-- Table: workflow_type
CREATE TABLE workflow_type (
    workflow_type_id serial NOT NULL,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    short_name varchar(100),
    PRIMARY KEY (workflow_type_id));

-- Table: workflow_type_aud
CREATE TABLE workflow_type_aud (
    workflow_type_id int4,
    code varchar(40),
    display_name varchar(255),
    description varchar(500),
    active bool,
    sort_order int4,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    rev int4 NOT NULL,
    revtype int2,
    FOREIGN KEY (rev) REFERENCES revinfo(rev));

-- Table: workflow_workorder_map
CREATE TABLE workflow_workorder_map (
    workflow_id uuid NOT NULL,
    work_order_id uuid NOT NULL,
    PRIMARY KEY (workflow_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id));

-- Table: workorder_completion_prediction
CREATE TABLE workorder_completion_prediction (
    work_order_id uuid NOT NULL,
    model_id int4 NOT NULL,
    value date,
    primary bool,
    created_time timestamp,
    created_by varchar(100),
    last_modified_time timestamp,
    last_modified_by varchar(100),
    prediction_id serial NOT NULL,
    PRIMARY KEY (prediction_id),
    FOREIGN KEY (model_id) REFERENCES ml_model(model_id),
    FOREIGN KEY (work_order_id) REFERENCES work_order(work_order_id));


You are a SQL query generator for a PostgreSQL database.
Your task is to convert natural language questions into accurate SQL queries.

Relationships reference:
-- paid, ibms-media-id, scrid, property-id refers to asset_metadata_type.code which is work_order.search_identifier_id
-- The work_order table stores details about work_order_status, due_date, created_by, tasks, assignee and priority
-- work_order.work_order_status_id refers to work_order_status.work_order_status_id
-- Use the display_name field for a human-readable status
-- work_order.asset_id refers to asset.asset_id
-- task_exec.work_order_id refers to work_order.work_order_id

DATABASE SCHEMA:
-- Table: work_order
Columns: work_order_id, asset_id, workflow_id, work_order_status_id, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, work_order_key, internal_work_order_id, distribution_id, operational_group_id, assignee_id, job_type_id, facility_id, operational_region_id, language_id, additional_service, search_identifier_id, search_identifier_value, prop_ep, scrid, show_code, distribution_date, property_id, file_delivery, show_uuid, replacement_status, sub_edit_type, corporate_premiere_date, region_long_name, assessment_results, rally_movie_name, network_short_name, schedule_change, is_assigned, cut_id, rally_movie_id, is_manual_due_date, received_date, cut_type, accurate_player_url, status_before_cancel, include_edit, include_script
Primary key: work_order_id
Foreign keys:
  workflow_id -> workflow(workflow_id)
  operational_group_id -> operational_group(operational_group_id)
  asset_id -> asset(asset_id)
  language_id -> language(language_id)
  operational_region_id -> operational_region(operational_region_id)
  job_type_id -> job_type(job_type_id)
  sub_edit_type -> sub_edit_type(sub_edit_type_id)
  additional_service -> sub_type(sub_type_id)
  file_delivery -> sub_type(sub_type_id)
  facility_id -> facility(facility_id)
  work_order_status_id -> work_order_status(work_order_status_id)
  distribution_id -> distribution(distribution_id)
  search_identifier_id -> asset_metadata_type(asset_metadata_type_id)
  assignee_id -> assignee(assignee_id)

-- Table: work_order_status
Columns: work_order_status_id, code, display_name, description, active, sort_order
Primary key: work_order_status_id

-- Table: work_order_status_workflow_type
Columns: work_order_status_workflow_type_id, workflow_type_id, work_order_status_id, active
Primary key: work_order_status_workflow_type_id
Foreign keys:
  workflow_type_id -> workflow_type(workflow_type_id)
  work_order_status_id -> work_order_status(work_order_status_id)

RAG CONTEXT:
The work_order_status table has columns: work_order_status_id, code, display_name, description, active, sort_order. Primary key: work_order_status_id.
The work_order_status_workflow_type table has columns: work_order_status_workflow_type_id, workflow_type_id, work_order_status_id, active. Primary key: work_order_status_workflow_type_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id); work_order_status_id references work_order_status(work_order_status_id);
The task_exec table has columns: task_exec_id, work_order_id, workflow_task_id, task_status_id, assignee_id, assigner, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, schedule_change, is_assigned, complexity_tier. Primary key: task_exec_id. Foreign keys: work_order_id references work_order(work_order_id); workflow_task_id references workflow_task(workflow_task_id); task_status_id references task_status(task_status_id); assignee_id references assignee(assignee_id);

User Query: What is the work_order status of work_order_id 8c3c9620-7942-4e46-9a3d-b2aed621b389
Generate SQL following these rules:
1. Use EXACT table/column names from schema
2. Use only the requested column(s) in SELECT
3. Consider previous questions and answers
4. For follow-ups, maintain consistency
5. Include LIMIT 100 unless specified
6. Generate a JSON response with:
   {
      "sql": "SELECT...", // only the executable SQL query"
      "explanation": "..." // optional
   }

RAG CONTEXT:
The work_order_status table has columns: work_order_status_id, code, display_name, description, active, sort_order. Primary key: work_order_status_id.
The workflow_completion_status table has columns: workflow_completion_status_id, workflow_id, work_order_status_id, active, created_time, created_by, last_modified_time, last_modified_by. Primary key: workflow_completion_status_id. Foreign keys: workflow_id references workflow(workflow_id); work_order_status_id references work_order_status(work_order_status_id);
The work_order_status_workflow_type table has columns: work_order_status_workflow_type_id, workflow_type_id, work_order_status_id, active. Primary key: work_order_status_workflow_type_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id); work_order_status_id references work_order_status(work_order_status_id);

Fetched table infos: [TableInfo(tableName=facilities, columns=[id, name, is_internal, is_active, region, workflows, jobs, languages, contact_emails, created_at], primaryKeys=[id], foreignKeys={}), TableInfo(tableName=duplo_worker_registry, columns=[duplo_worker_registry_id, workflow_orchestration_schema_id, worker_type, worker_code, worker_queue, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[duplo_worker_registry_id], foreignKeys={workflow_orchestration_schema_id=TableInfo.ForeignKeyReference(referencedTable=workflow_orchestration_schema, referencedColumn=workflow_orchestration_schema_id)}), TableInfo(tableName=task_orchestration_schema, columns=[task_orchestration_schema_id, code, display_name, version, format, definition, description, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[task_orchestration_schema_id], foreignKeys={}), TableInfo(tableName=workflow_orchestration_schema, columns=[workflow_orchestration_schema_id, code, display_name, version, format, definition, description, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[workflow_orchestration_schema_id], foreignKeys={}), TableInfo(tableName=asset, columns=[asset_id, asset_type_id, active, created_time, created_by, last_modified_time, last_modified_by, owning_network_id], primaryKeys=[asset_id], foreignKeys={asset_type_id=TableInfo.ForeignKeyReference(referencedTable=asset_type, referencedColumn=asset_type_id), owning_network_id=TableInfo.ForeignKeyReference(referencedTable=network, referencedColumn=network_id)}), TableInfo(tableName=asset_metadata, columns=[asset_id, asset_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[asset_id, asset_metadata_type_id], foreignKeys={asset_metadata_type_id=TableInfo.ForeignKeyReference(referencedTable=asset_metadata_type, referencedColumn=asset_metadata_type_id), asset_id=TableInfo.ForeignKeyReference(referencedTable=asset, referencedColumn=asset_id)}), TableInfo(tableName=asset_metadata_type, columns=[asset_metadata_type_id, code, display_name, description, active, sort_order], primaryKeys=[asset_metadata_type_id], foreignKeys={}), TableInfo(tableName=asset_type, columns=[asset_type_id, code, display_name, description, active, sort_order], primaryKeys=[asset_type_id], foreignKeys={}), TableInfo(tableName=assignee, columns=[assignee_id, display_name, email, rally_id, created_time, created_by, last_modified_time, last_modified_by, is_active, operational_region_id, rally_email], primaryKeys=[assignee_id], foreignKeys={operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=assignee_workflow_config, columns=[assignee_workflow_config_id, assignee_id, workflow_type_id, active], primaryKeys=[assignee_workflow_config_id], foreignKeys={workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id), assignee_id=TableInfo.ForeignKeyReference(referencedTable=assignee, referencedColumn=assignee_id)}), TableInfo(tableName=bulk_import_processed_workorders, columns=[processed_id, key, case_uuid, media_id, work_type, language, work_flow_type, distribution, status, validation_errrors, uploaded_by, created_time, work_order_id, work_order_updated_details], primaryKeys=[processed_id], foreignKeys={}), TableInfo(tableName=bulk_update_processed_workorders, columns=[processed_id, key, status, season_title, work_order_id, case_uuid, media_id, work_flow_type, validation_errrors, created_time, internal_work_order_id, case_id], primaryKeys=[processed_id], foreignKeys={}), TableInfo(tableName=circumstance, columns=[circumstance_id, code, display_name, description, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[circumstance_id], foreignKeys={}), TableInfo(tableName=circumstance_group, columns=[circumstance_group_id, code, display_name, description, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[circumstance_group_id], foreignKeys={}), TableInfo(tableName=circumstance_group_def, columns=[circumstance_group_def_id, workflow_type_id, circumstance_group_id, circumstance_id, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[circumstance_group_def_id], foreignKeys={circumstance_group_id=TableInfo.ForeignKeyReference(referencedTable=circumstance_group, referencedColumn=circumstance_group_id), circumstance_id=TableInfo.ForeignKeyReference(referencedTable=circumstance, referencedColumn=circumstance_id), workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id)}), TableInfo(tableName=circumstance_rule, columns=[circumstance_rule_id, workflow_type_id, rule_id, rank, circumstance_id, created_time, created_by, last_modified_time, last_modified_by, name, active], primaryKeys=[circumstance_rule_id], foreignKeys={rule_id=TableInfo.ForeignKeyReference(referencedTable=rule, referencedColumn=rule_id), circumstance_id=TableInfo.ForeignKeyReference(referencedTable=circumstance, referencedColumn=circumstance_id), workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id)}), TableInfo(tableName=circumstance_rule_condition, columns=[circumstance_rule_condition_id, circumstance_rule_id, field, operator, value, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[circumstance_rule_condition_id], foreignKeys={circumstance_rule_id=TableInfo.ForeignKeyReference(referencedTable=circumstance_rule, referencedColumn=circumstance_rule_id)}), TableInfo(tableName=circumstance_rule_parameters, columns=[circumstance_rule_parameters_id, circumstance_rule_id, field, value, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[circumstance_rule_parameters_id], foreignKeys={circumstance_rule_id=TableInfo.ForeignKeyReference(referencedTable=circumstance_rule, referencedColumn=circumstance_rule_id)}), TableInfo(tableName=clip_data, columns=[clip_id, work_order_id, approved_status, clip, program_id, edit_id, cut_id, logical_inventory_registration, tangible_inventory_registration], primaryKeys=[clip_id], foreignKeys={}), TableInfo(tableName=completion_condition, columns=[completion_condition_id, workflow_task_id, field, operator, value], primaryKeys=[completion_condition_id], foreignKeys={workflow_task_id=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id)}), TableInfo(tableName=contact, columns=[contact_id, name, email, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[contact_id], foreignKeys={}), TableInfo(tableName=currency, columns=[currency_id, code, display_name, created_time, created_by, last_modified_time, last_modified_by, active, description, sort_order], primaryKeys=[currency_id], foreignKeys={}), TableInfo(tableName=cut_type, columns=[cut_type_id, cut_type, cut_sub_type], primaryKeys=[cut_type_id], foreignKeys={}), TableInfo(tableName=databasechangelog, columns=[id, author, filename, dateexecuted, orderexecuted, exectype, md5sum, description, comments, tag, liquibase, contexts, labels, deployment_id], primaryKeys=[], foreignKeys={}), TableInfo(tableName=databasechangeloglock, columns=[id, locked, lockgranted, lockedby], primaryKeys=[id], foreignKeys={}), TableInfo(tableName=default_config, columns=[default_config_id, distribution_id, workflow_type_id, job_type_id, sub_edit_type_id, facility_id, assignee_id, operational_group_id, work_order_status_id, language_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, active, auto_create, due_date_type, allowed_prefixes, network_id, additional_service_id, alternate_job_types], primaryKeys=[default_config_id], foreignKeys={network_id=TableInfo.ForeignKeyReference(referencedTable=network, referencedColumn=network_id), sub_edit_type_id=TableInfo.ForeignKeyReference(referencedTable=sub_edit_type, referencedColumn=sub_edit_type_id), operational_group_id=TableInfo.ForeignKeyReference(referencedTable=operational_group, referencedColumn=operational_group_id), facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), additional_service_id=TableInfo.ForeignKeyReference(referencedTable=sub_type, referencedColumn=sub_type_id), workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id), language_id=TableInfo.ForeignKeyReference(referencedTable=language, referencedColumn=language_id), work_order_status_id=TableInfo.ForeignKeyReference(referencedTable=work_order_status, referencedColumn=work_order_status_id), distribution_id=TableInfo.ForeignKeyReference(referencedTable=distribution, referencedColumn=distribution_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id), assignee_id=TableInfo.ForeignKeyReference(referencedTable=assignee, referencedColumn=assignee_id)}), TableInfo(tableName=default_config_filter, columns=[default_config_filter_id, default_config_id, default_config_filter_type_id, active, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[default_config_filter_id], foreignKeys={default_config_filter_type_id=TableInfo.ForeignKeyReference(referencedTable=default_config_filter_type, referencedColumn=default_config_filter_type_id)}), TableInfo(tableName=default_config_filter_type, columns=[default_config_filter_type_id, code, value, active], primaryKeys=[default_config_filter_type_id], foreignKeys={}), TableInfo(tableName=default_config_metadata, columns=[default_config_id, default_config_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[default_config_id, default_config_metadata_type_id], foreignKeys={default_config_metadata_type_id=TableInfo.ForeignKeyReference(referencedTable=default_config_metadata_type, referencedColumn=default_config_metadata_type_id), default_config_id=TableInfo.ForeignKeyReference(referencedTable=default_config, referencedColumn=default_config_id)}), TableInfo(tableName=default_config_metadata_type, columns=[default_config_metadata_type_id, code, display_name, description, active, sort_order], primaryKeys=[default_config_metadata_type_id], foreignKeys={}), TableInfo(tableName=distribution, columns=[distribution_id, code, display_name, distribution_type, distribution_status, operational_region_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, external_id, external_name, external_code, pss_name, pss_code, market_id, pss_market_name, market_display_name, do_not_display, network_id], primaryKeys=[distribution_id], foreignKeys={network_id=TableInfo.ForeignKeyReference(referencedTable=network, referencedColumn=network_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=distribution_refine_defaults, columns=[distribution_refine_defaults_id, distribution_id, workflow_id], primaryKeys=[distribution_refine_defaults_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), distribution_id=TableInfo.ForeignKeyReference(referencedTable=distribution, referencedColumn=distribution_id)}), TableInfo(tableName=facility, columns=[facility_id, display_name, facility_location, billing_code, facility_status, currency_id, contact_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, is_languaging, is_video_edit, facility_uuid, manual_update, is_dim], primaryKeys=[facility_id], foreignKeys={contact_id=TableInfo.ForeignKeyReference(referencedTable=contact, referencedColumn=contact_id), currency_id=TableInfo.ForeignKeyReference(referencedTable=currency, referencedColumn=currency_id)}), TableInfo(tableName=facility_capability, columns=[facility_capability_id, facility_id, language_id, job_type_id, performance_index, capacity], primaryKeys=[], foreignKeys={facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), language_id=TableInfo.ForeignKeyReference(referencedTable=language, referencedColumn=language_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id)}), TableInfo(tableName=facility_contact, columns=[facility_id, contact_id], primaryKeys=[facility_id, contact_id], foreignKeys={facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), contact_id=TableInfo.ForeignKeyReference(referencedTable=contact, referencedColumn=contact_id)}), TableInfo(tableName=facility_language, columns=[facility_id, language_id], primaryKeys=[facility_id, language_id], foreignKeys={facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), language_id=TableInfo.ForeignKeyReference(referencedTable=language, referencedColumn=language_id)}), TableInfo(tableName=facility_operational_region, columns=[facility_id, operational_region_id], primaryKeys=[facility_id, operational_region_id], foreignKeys={facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=inventory_lang_xre, columns=[language_id, mdd_language, component], primaryKeys=[], foreignKeys={language_id=TableInfo.ForeignKeyReference(referencedTable=language, referencedColumn=language_id)}), TableInfo(tableName=job_sub_edit_type, columns=[job_sub_edit_type_id, job_type_id, sub_edit_type_id, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[job_sub_edit_type_id], foreignKeys={sub_edit_type_id=TableInfo.ForeignKeyReference(referencedTable=sub_edit_type, referencedColumn=sub_edit_type_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id)}), TableInfo(tableName=job_type, columns=[job_type_id, code, display_name, description, active, sort_order, rally_job_type], primaryKeys=[job_type_id], foreignKeys={}), TableInfo(tableName=job_type_sub_type, columns=[job_type_id, sub_type_id, active, operational_region_code], primaryKeys=[job_type_id, sub_type_id, operational_region_code], foreignKeys={sub_type_id=TableInfo.ForeignKeyReference(referencedTable=sub_type, referencedColumn=sub_type_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id)}), TableInfo(tableName=language, columns=[language_id, code, display_name, description, active, created_time, created_by, last_modified_time, last_modified_by, legacy_lang_code, is_written, is_spoken], primaryKeys=[language_id], foreignKeys={}), TableInfo(tableName=manifestation_processing_log, columns=[id, timestamp, manifestation_type, edit_id, alternate_id, primary_cut_edit_id, status, error_code, error_message, raw_manifestation], primaryKeys=[id], foreignKeys={}), TableInfo(tableName=ml_model, columns=[model_id, code, name, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[model_id], foreignKeys={}), TableInfo(tableName=network, columns=[network_id, code, display_name, operational_region_id, delivery_location_id, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, description, pss_network_id], primaryKeys=[network_id], foreignKeys={delivery_location_id=TableInfo.ForeignKeyReference(referencedTable=sub_type, referencedColumn=sub_type_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=next_id, columns=[max], primaryKeys=[], foreignKeys={}), TableInfo(tableName=note_category, columns=[note_category_id, code, display_name, description, active, sort_order], primaryKeys=[note_category_id], foreignKeys={}), TableInfo(tableName=notification_subscription, columns=[notification_subscription_id, workflow_id, code, display_name, description, all_fields, active, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[notification_subscription_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id)}), TableInfo(tableName=notification_subscription_field, columns=[notification_subscription_id, field, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[], foreignKeys={notification_subscription_id=TableInfo.ForeignKeyReference(referencedTable=notification_subscription, referencedColumn=notification_subscription_id)}), TableInfo(tableName=notification_subscription_recip, columns=[notification_subscription_id, assignee_id, grouping_id, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[], foreignKeys={notification_subscription_id=TableInfo.ForeignKeyReference(referencedTable=notification_subscription, referencedColumn=notification_subscription_id), assignee_id=TableInfo.ForeignKeyReference(referencedTable=assignee, referencedColumn=assignee_id)}), TableInfo(tableName=operational_group, columns=[operational_group_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, operational_group_status, contact_id, is_languaging, is_video_edit, operational_region_id, is_dim], primaryKeys=[operational_group_id], foreignKeys={contact_id=TableInfo.ForeignKeyReference(referencedTable=contact, referencedColumn=contact_id)}), TableInfo(tableName=operational_group_contact, columns=[operational_group_id, contact_id], primaryKeys=[operational_group_id, contact_id], foreignKeys={operational_group_id=TableInfo.ForeignKeyReference(referencedTable=operational_group, referencedColumn=operational_group_id), contact_id=TableInfo.ForeignKeyReference(referencedTable=contact, referencedColumn=contact_id)}), TableInfo(tableName=operational_region, columns=[operational_region_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, notification_preference], primaryKeys=[operational_region_id], foreignKeys={}), TableInfo(tableName=operational_region_contact, columns=[operational_region_id, contact_id], primaryKeys=[operational_region_id, contact_id], foreignKeys={contact_id=TableInfo.ForeignKeyReference(referencedTable=contact, referencedColumn=contact_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=permissions, columns=[permission_id, workflow_type_id, role, business_function, has_access, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[permission_id], foreignKeys={workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id)}), TableInfo(tableName=reference_material, columns=[reference_material_id, code, display_name, description, active], primaryKeys=[reference_material_id], foreignKeys={}), TableInfo(tableName=reference_work_type, columns=[reference_work_type_id, work_type_name, job_type_id, job_type_code, component_type, id_change, active], primaryKeys=[reference_work_type_id], foreignKeys={job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id)}), TableInfo(tableName=reference_work_type_reference_material, columns=[reference_work_type_id, reference_material_id, operational_region_id, type, recut, required], primaryKeys=[reference_work_type_id, reference_material_id, operational_region_id, type], foreignKeys={reference_material_id=TableInfo.ForeignKeyReference(referencedTable=reference_material, referencedColumn=reference_material_id), reference_work_type_id=TableInfo.ForeignKeyReference(referencedTable=reference_work_type, referencedColumn=reference_work_type_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=reference_material, referencedColumn=reference_material_id)}), TableInfo(tableName=revinfo, columns=[rev, revtstmp], primaryKeys=[rev], foreignKeys={}), TableInfo(tableName=rule, columns=[rule_id, code, display_name, description, version, rule_type, rule_value, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[rule_id], foreignKeys={}), TableInfo(tableName=shedlock, columns=[name, lock_until, locked_at, locked_by], primaryKeys=[name], foreignKeys={}), TableInfo(tableName=skip_condition, columns=[skip_condition_id, workflow_task_id, field, operator, value], primaryKeys=[skip_condition_id], foreignKeys={workflow_task_id=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id)}), TableInfo(tableName=source_task, columns=[source_task_id, work_order_id, case_id, cut_id, created_time, created_by, last_modified_time, last_modified_by, qc_status, case_uuid, cut_type, instance_id], primaryKeys=[source_task_id], foreignKeys={work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id)}), TableInfo(tableName=spring_session, columns=[primary_id, session_id, creation_time, last_access_time, max_inactive_interval, expiry_time, principal_name], primaryKeys=[primary_id], foreignKeys={}), TableInfo(tableName=spring_session_attributes, columns=[session_primary_id, attribute_name, attribute_bytes], primaryKeys=[session_primary_id, attribute_name], foreignKeys={session_primary_id=TableInfo.ForeignKeyReference(referencedTable=spring_session, referencedColumn=primary_id)}), TableInfo(tableName=standard_duration, columns=[standard_duration_id, key, hours], primaryKeys=[standard_duration_id], foreignKeys={}), TableInfo(tableName=sub_edit_type, columns=[sub_edit_type_id, code, display_name, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[sub_edit_type_id], foreignKeys={}), TableInfo(tableName=sub_type, columns=[sub_type_id, sub_type_category_id, code, display_name, description, active, sort_order], primaryKeys=[sub_type_id], foreignKeys={sub_type_category_id=TableInfo.ForeignKeyReference(referencedTable=sub_type_category, referencedColumn=sub_type_category_id)}), TableInfo(tableName=sub_type_category, columns=[sub_type_category_id, code, display_name, description, active, sort_order], primaryKeys=[sub_type_category_id], foreignKeys={}), TableInfo(tableName=subscription_condition, columns=[subscription_condition_id, workflow_subscription_id, field, operator, value, active, created_time, created_by, last_modified_time, last_modified_by, workflow_input_id, workflow_id, name, type, is_key_field, default_value, workflow_task_id, key_ordinal, json_path], primaryKeys=[subscription_condition_id], foreignKeys={workflow_subscription_id=TableInfo.ForeignKeyReference(referencedTable=workflow_subscription, referencedColumn=workflow_subscription_id)}), TableInfo(tableName=subscription_input, columns=[subscription_input_id, workflow_input_id, workflow_subscription_id, field, value, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[subscription_input_id], foreignKeys={workflow_subscription_id=TableInfo.ForeignKeyReference(referencedTable=workflow_subscription, referencedColumn=workflow_subscription_id), workflow_input_id=TableInfo.ForeignKeyReference(referencedTable=workflow_input, referencedColumn=workflow_input_id)}), TableInfo(tableName=subscription_router, columns=[subscription_router_id, workflow_subscription_id, field, operator, value, active, created_time, created_by, last_modified_time, last_modified_by, routing_key], primaryKeys=[subscription_router_id], foreignKeys={workflow_subscription_id=TableInfo.ForeignKeyReference(referencedTable=workflow_subscription, referencedColumn=workflow_subscription_id)}), TableInfo(tableName=task, columns=[task_id, task_type_id, code, display_name, description, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[task_id], foreignKeys={task_type_id=TableInfo.ForeignKeyReference(referencedTable=task_type, referencedColumn=task_type_id)}), TableInfo(tableName=task_exec, columns=[task_exec_id, work_order_id, workflow_task_id, task_status_id, assignee_id, assigner, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, schedule_change, is_assigned, complexity_tier], primaryKeys=[task_exec_id], foreignKeys={work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id), workflow_task_id=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id), task_status_id=TableInfo.ForeignKeyReference(referencedTable=task_status, referencedColumn=task_status_id), assignee_id=TableInfo.ForeignKeyReference(referencedTable=assignee, referencedColumn=assignee_id)}), TableInfo(tableName=task_exec_metadata, columns=[task_exec_id, task_exec_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[task_exec_id, task_exec_metadata_type_id], foreignKeys={task_exec_metadata_type_id=TableInfo.ForeignKeyReference(referencedTable=task_exec_metadata_type, referencedColumn=task_exec_metadata_type_id), task_exec_id=TableInfo.ForeignKeyReference(referencedTable=task_exec, referencedColumn=task_exec_id)}), TableInfo(tableName=task_exec_metadata_type, columns=[task_exec_metadata_type_id, code, display_name, description, active, sort_order], primaryKeys=[task_exec_metadata_type_id], foreignKeys={}), TableInfo(tableName=task_exec_note, columns=[task_exec_note_id, note_category_id, task_exec_id, note, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[task_exec_note_id], foreignKeys={task_exec_id=TableInfo.ForeignKeyReference(referencedTable=task_exec, referencedColumn=task_exec_id), note_category_id=TableInfo.ForeignKeyReference(referencedTable=note_category, referencedColumn=note_category_id)}), TableInfo(tableName=task_status, columns=[task_status_id, code, display_name, description, active, sort_order], primaryKeys=[task_status_id], foreignKeys={}), TableInfo(tableName=task_status_workflow_type, columns=[task_status_workflow_type_id, workflow_type_id, task_status_id, active], primaryKeys=[task_status_workflow_type_id], foreignKeys={workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id), task_status_id=TableInfo.ForeignKeyReference(referencedTable=task_status, referencedColumn=task_status_id)}), TableInfo(tableName=task_type, columns=[task_type_id, code, display_name, description, active, sort_order], primaryKeys=[task_type_id], foreignKeys={}), TableInfo(tableName=version_prefix, columns=[version_prefix_id, code, display_name, operational_region_id, active, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[version_prefix_id], foreignKeys={operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id)}), TableInfo(tableName=work_order, columns=[work_order_id, asset_id, workflow_id, work_order_status_id, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, work_order_key, internal_work_order_id, distribution_id, operational_group_id, assignee_id, job_type_id, facility_id, operational_region_id, language_id, additional_service, search_identifier_id, search_identifier_value, prop_ep, scrid, show_code, distribution_date, property_id, file_delivery, show_uuid, replacement_status, sub_edit_type, corporate_premiere_date, region_long_name, assessment_results, rally_movie_name, network_short_name, schedule_change, is_assigned, cut_id, rally_movie_id, is_manual_due_date, received_date, cut_type, accurate_player_url, status_before_cancel, include_edit, include_script], primaryKeys=[work_order_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), operational_group_id=TableInfo.ForeignKeyReference(referencedTable=operational_group, referencedColumn=operational_group_id), asset_id=TableInfo.ForeignKeyReference(referencedTable=asset, referencedColumn=asset_id), language_id=TableInfo.ForeignKeyReference(referencedTable=language, referencedColumn=language_id), operational_region_id=TableInfo.ForeignKeyReference(referencedTable=operational_region, referencedColumn=operational_region_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id), sub_edit_type=TableInfo.ForeignKeyReference(referencedTable=sub_edit_type, referencedColumn=sub_edit_type_id), additional_service=TableInfo.ForeignKeyReference(referencedTable=sub_type, referencedColumn=sub_type_id), file_delivery=TableInfo.ForeignKeyReference(referencedTable=sub_type, referencedColumn=sub_type_id), facility_id=TableInfo.ForeignKeyReference(referencedTable=facility, referencedColumn=facility_id), work_order_status_id=TableInfo.ForeignKeyReference(referencedTable=work_order_status, referencedColumn=work_order_status_id), distribution_id=TableInfo.ForeignKeyReference(referencedTable=distribution, referencedColumn=distribution_id), search_identifier_id=TableInfo.ForeignKeyReference(referencedTable=asset_metadata_type, referencedColumn=asset_metadata_type_id), assignee_id=TableInfo.ForeignKeyReference(referencedTable=assignee, referencedColumn=assignee_id)}), TableInfo(tableName=work_order_metadata, columns=[work_order_id, work_order_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[work_order_id, work_order_metadata_type_id], foreignKeys={work_order_metadata_type_id=TableInfo.ForeignKeyReference(referencedTable=work_order_metadata_type, referencedColumn=work_order_metadata_type_id), work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id)}), TableInfo(tableName=work_order_metadata_type, columns=[work_order_metadata_type_id, code, display_name, description, active, sort_order], primaryKeys=[work_order_metadata_type_id], foreignKeys={}), TableInfo(tableName=work_order_note, columns=[work_order_note_id, note_category_id, work_order_id, note, created_time, created_by, last_modified_time, last_modified_by, active], primaryKeys=[work_order_note_id], foreignKeys={work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id), note_category_id=TableInfo.ForeignKeyReference(referencedTable=note_category, referencedColumn=note_category_id)}), TableInfo(tableName=work_order_status, columns=[work_order_status_id, code, display_name, description, active, sort_order], primaryKeys=[work_order_status_id], foreignKeys={}), TableInfo(tableName=work_order_status_workflow_type, columns=[work_order_status_workflow_type_id, workflow_type_id, work_order_status_id, active], primaryKeys=[work_order_status_workflow_type_id], foreignKeys={workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id), work_order_status_id=TableInfo.ForeignKeyReference(referencedTable=work_order_status, referencedColumn=work_order_status_id)}), TableInfo(tableName=workflow, columns=[workflow_id, workflow_type_id, code, display_name, version, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[workflow_id], foreignKeys={workflow_type_id=TableInfo.ForeignKeyReference(referencedTable=workflow_type, referencedColumn=workflow_type_id)}), TableInfo(tableName=workflow_completion_status, columns=[workflow_completion_status_id, workflow_id, work_order_status_id, active, created_time, created_by, last_modified_time, last_modified_by], primaryKeys=[workflow_completion_status_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), work_order_status_id=TableInfo.ForeignKeyReference(referencedTable=work_order_status, referencedColumn=work_order_status_id)}), TableInfo(tableName=workflow_input, columns=[workflow_input_id, workflow_id, name, type, is_key_field, default_value, created_time, created_by, last_modified_time, last_modified_by, workflow_task_id, key_ordinal, json_path], primaryKeys=[workflow_input_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), workflow_task_id=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id)}), TableInfo(tableName=workflow_job_types, columns=[workflow_id, job_type_id], primaryKeys=[workflow_id, job_type_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), job_type_id=TableInfo.ForeignKeyReference(referencedTable=job_type, referencedColumn=job_type_id)}), TableInfo(tableName=workflow_subscription, columns=[workflow_subscription_id, workflow_id, name, action_type, active, created_time, created_by, last_modified_time, last_modified_by, subscription_condition_id, field, operator, value], primaryKeys=[workflow_subscription_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id)}), TableInfo(tableName=workflow_task, columns=[workflow_task_id, workflow_id, task_id, created_time, created_by, last_modified_time, last_modified_by, name, sort_order], primaryKeys=[workflow_task_id], foreignKeys={workflow_id=TableInfo.ForeignKeyReference(referencedTable=workflow, referencedColumn=workflow_id), task_id=TableInfo.ForeignKeyReference(referencedTable=task, referencedColumn=task_id)}), TableInfo(tableName=workflow_task_dependency, columns=[workflow_task_id, depends_on], primaryKeys=[], foreignKeys={depends_on=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id), workflow_task_id=TableInfo.ForeignKeyReference(referencedTable=workflow_task, referencedColumn=workflow_task_id)}), TableInfo(tableName=workflow_type, columns=[workflow_type_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, short_name], primaryKeys=[workflow_type_id], foreignKeys={}), TableInfo(tableName=workflow_workorder_map, columns=[workflow_id, work_order_id], primaryKeys=[workflow_id], foreignKeys={work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id)}), TableInfo(tableName=workorder_completion_prediction, columns=[work_order_id, model_id, value, primary, created_time, created_by, last_modified_time, last_modified_by, prediction_id], primaryKeys=[prediction_id], foreignKeys={work_order_id=TableInfo.ForeignKeyReference(referencedTable=work_order, referencedColumn=work_order_id), model_id=TableInfo.ForeignKeyReference(referencedTable=ml_model, referencedColumn=model_id)})]

Schema descriptions: [{text=The facilities table has columns: id, name, is_internal, is_active, region, workflows, jobs, languages, contact_emails, created_at. Primary key: id., type=schema_desc}, {text=The duplo_worker_registry table has columns: duplo_worker_registry_id, workflow_orchestration_schema_id, worker_type, worker_code, worker_queue, created_time, created_by, last_modified_time, last_modified_by. Primary key: duplo_worker_registry_id. Foreign keys: workflow_orchestration_schema_id references workflow_orchestration_schema(workflow_orchestration_schema_id);, type=schema_desc}, {text=The task_orchestration_schema table has columns: task_orchestration_schema_id, code, display_name, version, format, definition, description, created_time, created_by, last_modified_time, last_modified_by. Primary key: task_orchestration_schema_id., type=schema_desc}, {text=The workflow_orchestration_schema table has columns: workflow_orchestration_schema_id, code, display_name, version, format, definition, description, created_time, created_by, last_modified_time, last_modified_by. Primary key: workflow_orchestration_schema_id., type=schema_desc}, {text=The asset table has columns: asset_id, asset_type_id, active, created_time, created_by, last_modified_time, last_modified_by, owning_network_id. Primary key: asset_id. Foreign keys: asset_type_id references asset_type(asset_type_id); owning_network_id references network(network_id);, type=schema_desc}, {text=The asset_metadata table has columns: asset_id, asset_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by. Primary key: asset_id, asset_metadata_type_id. Foreign keys: asset_metadata_type_id references asset_metadata_type(asset_metadata_type_id); asset_id references asset(asset_id);, type=schema_desc}, {text=The asset_metadata_type table has columns: asset_metadata_type_id, code, display_name, description, active, sort_order. Primary key: asset_metadata_type_id., type=schema_desc}, {text=The asset_type table has columns: asset_type_id, code, display_name, description, active, sort_order. Primary key: asset_type_id., type=schema_desc}, {text=The assignee table has columns: assignee_id, display_name, email, rally_id, created_time, created_by, last_modified_time, last_modified_by, is_active, operational_region_id, rally_email. Primary key: assignee_id. Foreign keys: operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The assignee_workflow_config table has columns: assignee_workflow_config_id, assignee_id, workflow_type_id, active. Primary key: assignee_workflow_config_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id); assignee_id references assignee(assignee_id);, type=schema_desc}, {text=The bulk_import_processed_workorders table has columns: processed_id, key, case_uuid, media_id, work_type, language, work_flow_type, distribution, status, validation_errrors, uploaded_by, created_time, work_order_id, work_order_updated_details. Primary key: processed_id., type=schema_desc}, {text=The bulk_update_processed_workorders table has columns: processed_id, key, status, season_title, work_order_id, case_uuid, media_id, work_flow_type, validation_errrors, created_time, internal_work_order_id, case_id. Primary key: processed_id., type=schema_desc}, {text=The circumstance table has columns: circumstance_id, code, display_name, description, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: circumstance_id., type=schema_desc}, {text=The circumstance_group table has columns: circumstance_group_id, code, display_name, description, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: circumstance_group_id., type=schema_desc}, {text=The circumstance_group_def table has columns: circumstance_group_def_id, workflow_type_id, circumstance_group_id, circumstance_id, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: circumstance_group_def_id. Foreign keys: circumstance_group_id references circumstance_group(circumstance_group_id); circumstance_id references circumstance(circumstance_id); workflow_type_id references workflow_type(workflow_type_id);, type=schema_desc}, {text=The circumstance_rule table has columns: circumstance_rule_id, workflow_type_id, rule_id, rank, circumstance_id, created_time, created_by, last_modified_time, last_modified_by, name, active. Primary key: circumstance_rule_id. Foreign keys: rule_id references rule(rule_id); circumstance_id references circumstance(circumstance_id); workflow_type_id references workflow_type(workflow_type_id);, type=schema_desc}, {text=The circumstance_rule_condition table has columns: circumstance_rule_condition_id, circumstance_rule_id, field, operator, value, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: circumstance_rule_condition_id. Foreign keys: circumstance_rule_id references circumstance_rule(circumstance_rule_id);, type=schema_desc}, {text=The circumstance_rule_parameters table has columns: circumstance_rule_parameters_id, circumstance_rule_id, field, value, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: circumstance_rule_parameters_id. Foreign keys: circumstance_rule_id references circumstance_rule(circumstance_rule_id);, type=schema_desc}, {text=The clip_data table has columns: clip_id, work_order_id, approved_status, clip, program_id, edit_id, cut_id, logical_inventory_registration, tangible_inventory_registration. Primary key: clip_id., type=schema_desc}, {text=The completion_condition table has columns: completion_condition_id, workflow_task_id, field, operator, value. Primary key: completion_condition_id. Foreign keys: workflow_task_id references workflow_task(workflow_task_id);, type=schema_desc}, {text=The contact table has columns: contact_id, name, email, created_time, created_by, last_modified_time, last_modified_by. Primary key: contact_id., type=schema_desc}, {text=The currency table has columns: currency_id, code, display_name, created_time, created_by, last_modified_time, last_modified_by, active, description, sort_order. Primary key: currency_id., type=schema_desc}, {text=The cut_type table has columns: cut_type_id, cut_type, cut_sub_type. Primary key: cut_type_id., type=schema_desc}, {text=The databasechangelog table has columns: id, author, filename, dateexecuted, orderexecuted, exectype, md5sum, description, comments, tag, liquibase, contexts, labels, deployment_id., type=schema_desc}, {text=The databasechangeloglock table has columns: id, locked, lockgranted, lockedby. Primary key: id., type=schema_desc}, {text=The default_config table has columns: default_config_id, distribution_id, workflow_type_id, job_type_id, sub_edit_type_id, facility_id, assignee_id, operational_group_id, work_order_status_id, language_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, active, auto_create, due_date_type, allowed_prefixes, network_id, additional_service_id, alternate_job_types. Primary key: default_config_id. Foreign keys: network_id references network(network_id); sub_edit_type_id references sub_edit_type(sub_edit_type_id); operational_group_id references operational_group(operational_group_id); facility_id references facility(facility_id); additional_service_id references sub_type(sub_type_id); workflow_type_id references workflow_type(workflow_type_id); language_id references language(language_id); work_order_status_id references work_order_status(work_order_status_id); distribution_id references distribution(distribution_id); job_type_id references job_type(job_type_id); assignee_id references assignee(assignee_id);, type=schema_desc}, {text=The default_config_filter table has columns: default_config_filter_id, default_config_id, default_config_filter_type_id, active, created_time, created_by, last_modified_time, last_modified_by. Primary key: default_config_filter_id. Foreign keys: default_config_filter_type_id references default_config_filter_type(default_config_filter_type_id);, type=schema_desc}, {text=The default_config_filter_type table has columns: default_config_filter_type_id, code, value, active. Primary key: default_config_filter_type_id., type=schema_desc}, {text=The default_config_metadata table has columns: default_config_id, default_config_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by. Primary key: default_config_id, default_config_metadata_type_id. Foreign keys: default_config_metadata_type_id references default_config_metadata_type(default_config_metadata_type_id); default_config_id references default_config(default_config_id);, type=schema_desc}, {text=The default_config_metadata_type table has columns: default_config_metadata_type_id, code, display_name, description, active, sort_order. Primary key: default_config_metadata_type_id., type=schema_desc}, {text=The distribution table has columns: distribution_id, code, display_name, distribution_type, distribution_status, operational_region_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, external_id, external_name, external_code, pss_name, pss_code, market_id, pss_market_name, market_display_name, do_not_display, network_id. Primary key: distribution_id. Foreign keys: network_id references network(network_id); operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The distribution_refine_defaults table has columns: distribution_refine_defaults_id, distribution_id, workflow_id. Primary key: distribution_refine_defaults_id. Foreign keys: workflow_id references workflow(workflow_id); distribution_id references distribution(distribution_id);, type=schema_desc}, {text=The facility table has columns: facility_id, display_name, facility_location, billing_code, facility_status, currency_id, contact_id, sort_order, created_time, created_by, last_modified_time, last_modified_by, is_languaging, is_video_edit, facility_uuid, manual_update, is_dim. Primary key: facility_id. Foreign keys: contact_id references contact(contact_id); currency_id references currency(currency_id);, type=schema_desc}, {text=The facility_capability table has columns: facility_capability_id, facility_id, language_id, job_type_id, performance_index, capacity. Foreign keys: facility_id references facility(facility_id); language_id references language(language_id); job_type_id references job_type(job_type_id);, type=schema_desc}, {text=The facility_contact table has columns: facility_id, contact_id. Primary key: facility_id, contact_id. Foreign keys: facility_id references facility(facility_id); contact_id references contact(contact_id);, type=schema_desc}, {text=The facility_language table has columns: facility_id, language_id. Primary key: facility_id, language_id. Foreign keys: facility_id references facility(facility_id); language_id references language(language_id);, type=schema_desc}, {text=The facility_operational_region table has columns: facility_id, operational_region_id. Primary key: facility_id, operational_region_id. Foreign keys: facility_id references facility(facility_id); operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The inventory_lang_xre table has columns: language_id, mdd_language, component. Foreign keys: language_id references language(language_id);, type=schema_desc}, {text=The job_sub_edit_type table has columns: job_sub_edit_type_id, job_type_id, sub_edit_type_id, created_time, created_by, last_modified_time, last_modified_by. Primary key: job_sub_edit_type_id. Foreign keys: sub_edit_type_id references sub_edit_type(sub_edit_type_id); job_type_id references job_type(job_type_id);, type=schema_desc}, {text=The job_type table has columns: job_type_id, code, display_name, description, active, sort_order, rally_job_type. Primary key: job_type_id., type=schema_desc}, {text=The job_type_sub_type table has columns: job_type_id, sub_type_id, active, operational_region_code. Primary key: job_type_id, sub_type_id, operational_region_code. Foreign keys: sub_type_id references sub_type(sub_type_id); job_type_id references job_type(job_type_id);, type=schema_desc}, {text=The language table has columns: language_id, code, display_name, description, active, created_time, created_by, last_modified_time, last_modified_by, legacy_lang_code, is_written, is_spoken. Primary key: language_id., type=schema_desc}, {text=The manifestation_processing_log table has columns: id, timestamp, manifestation_type, edit_id, alternate_id, primary_cut_edit_id, status, error_code, error_message, raw_manifestation. Primary key: id., type=schema_desc}, {text=The ml_model table has columns: model_id, code, name, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: model_id., type=schema_desc}, {text=The network table has columns: network_id, code, display_name, operational_region_id, delivery_location_id, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, description, pss_network_id. Primary key: network_id. Foreign keys: delivery_location_id references sub_type(sub_type_id); operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The next_id table has columns: max., type=schema_desc}, {text=The note_category table has columns: note_category_id, code, display_name, description, active, sort_order. Primary key: note_category_id., type=schema_desc}, {text=The notification_subscription table has columns: notification_subscription_id, workflow_id, code, display_name, description, all_fields, active, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: notification_subscription_id. Foreign keys: workflow_id references workflow(workflow_id);, type=schema_desc}, {text=The notification_subscription_field table has columns: notification_subscription_id, field, created_time, created_by, last_modified_time, last_modified_by. Foreign keys: notification_subscription_id references notification_subscription(notification_subscription_id);, type=schema_desc}, {text=The notification_subscription_recip table has columns: notification_subscription_id, assignee_id, grouping_id, created_time, created_by, last_modified_time, last_modified_by. Foreign keys: notification_subscription_id references notification_subscription(notification_subscription_id); assignee_id references assignee(assignee_id);, type=schema_desc}, {text=The operational_group table has columns: operational_group_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, operational_group_status, contact_id, is_languaging, is_video_edit, operational_region_id, is_dim. Primary key: operational_group_id. Foreign keys: contact_id references contact(contact_id);, type=schema_desc}, {text=The operational_group_contact table has columns: operational_group_id, contact_id. Primary key: operational_group_id, contact_id. Foreign keys: operational_group_id references operational_group(operational_group_id); contact_id references contact(contact_id);, type=schema_desc}, {text=The operational_region table has columns: operational_region_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, notification_preference. Primary key: operational_region_id., type=schema_desc}, {text=The operational_region_contact table has columns: operational_region_id, contact_id. Primary key: operational_region_id, contact_id. Foreign keys: contact_id references contact(contact_id); operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The permissions table has columns: permission_id, workflow_type_id, role, business_function, has_access, created_time, created_by, last_modified_time, last_modified_by. Primary key: permission_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id);, type=schema_desc}, {text=The reference_material table has columns: reference_material_id, code, display_name, description, active. Primary key: reference_material_id., type=schema_desc}, {text=The reference_work_type table has columns: reference_work_type_id, work_type_name, job_type_id, job_type_code, component_type, id_change, active. Primary key: reference_work_type_id. Foreign keys: job_type_id references job_type(job_type_id);, type=schema_desc}, {text=The reference_work_type_reference_material table has columns: reference_work_type_id, reference_material_id, operational_region_id, type, recut, required. Primary key: reference_work_type_id, reference_material_id, operational_region_id, type. Foreign keys: reference_material_id references reference_material(reference_material_id); reference_work_type_id references reference_work_type(reference_work_type_id); operational_region_id references reference_material(reference_material_id);, type=schema_desc}, {text=The revinfo table has columns: rev, revtstmp. Primary key: rev., type=schema_desc}, {text=The rule table has columns: rule_id, code, display_name, description, version, rule_type, rule_value, created_time, created_by, last_modified_time, last_modified_by. Primary key: rule_id., type=schema_desc}, {text=The shedlock table has columns: name, lock_until, locked_at, locked_by. Primary key: name., type=schema_desc}, {text=The skip_condition table has columns: skip_condition_id, workflow_task_id, field, operator, value. Primary key: skip_condition_id. Foreign keys: workflow_task_id references workflow_task(workflow_task_id);, type=schema_desc}, {text=The source_task table has columns: source_task_id, work_order_id, case_id, cut_id, created_time, created_by, last_modified_time, last_modified_by, qc_status, case_uuid, cut_type, instance_id. Primary key: source_task_id. Foreign keys: work_order_id references work_order(work_order_id);, type=schema_desc}, {text=The spring_session table has columns: primary_id, session_id, creation_time, last_access_time, max_inactive_interval, expiry_time, principal_name. Primary key: primary_id., type=schema_desc}, {text=The spring_session_attributes table has columns: session_primary_id, attribute_name, attribute_bytes. Primary key: session_primary_id, attribute_name. Foreign keys: session_primary_id references spring_session(primary_id);, type=schema_desc}, {text=The standard_duration table has columns: standard_duration_id, key, hours. Primary key: standard_duration_id., type=schema_desc}, {text=The sub_edit_type table has columns: sub_edit_type_id, code, display_name, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: sub_edit_type_id., type=schema_desc}, {text=The sub_type table has columns: sub_type_id, sub_type_category_id, code, display_name, description, active, sort_order. Primary key: sub_type_id. Foreign keys: sub_type_category_id references sub_type_category(sub_type_category_id);, type=schema_desc}, {text=The sub_type_category table has columns: sub_type_category_id, code, display_name, description, active, sort_order. Primary key: sub_type_category_id., type=schema_desc}, {text=The subscription_condition table has columns: subscription_condition_id, workflow_subscription_id, field, operator, value, active, created_time, created_by, last_modified_time, last_modified_by, workflow_input_id, workflow_id, name, type, is_key_field, default_value, workflow_task_id, key_ordinal, json_path. Primary key: subscription_condition_id. Foreign keys: workflow_subscription_id references workflow_subscription(workflow_subscription_id);, type=schema_desc}, {text=The subscription_input table has columns: subscription_input_id, workflow_input_id, workflow_subscription_id, field, value, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: subscription_input_id. Foreign keys: workflow_subscription_id references workflow_subscription(workflow_subscription_id); workflow_input_id references workflow_input(workflow_input_id);, type=schema_desc}, {text=The subscription_router table has columns: subscription_router_id, workflow_subscription_id, field, operator, value, active, created_time, created_by, last_modified_time, last_modified_by, routing_key. Primary key: subscription_router_id. Foreign keys: workflow_subscription_id references workflow_subscription(workflow_subscription_id);, type=schema_desc}, {text=The task table has columns: task_id, task_type_id, code, display_name, description, created_time, created_by, last_modified_time, last_modified_by. Primary key: task_id. Foreign keys: task_type_id references task_type(task_type_id);, type=schema_desc}, {text=The task_exec table has columns: task_exec_id, work_order_id, workflow_task_id, task_status_id, assignee_id, assigner, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, schedule_change, is_assigned, complexity_tier. Primary key: task_exec_id. Foreign keys: work_order_id references work_order(work_order_id); workflow_task_id references workflow_task(workflow_task_id); task_status_id references task_status(task_status_id); assignee_id references assignee(assignee_id);, type=schema_desc}, {text=The task_exec_metadata table has columns: task_exec_id, task_exec_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by. Primary key: task_exec_id, task_exec_metadata_type_id. Foreign keys: task_exec_metadata_type_id references task_exec_metadata_type(task_exec_metadata_type_id); task_exec_id references task_exec(task_exec_id);, type=schema_desc}, {text=The task_exec_metadata_type table has columns: task_exec_metadata_type_id, code, display_name, description, active, sort_order. Primary key: task_exec_metadata_type_id., type=schema_desc}, {text=The task_exec_note table has columns: task_exec_note_id, note_category_id, task_exec_id, note, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: task_exec_note_id. Foreign keys: task_exec_id references task_exec(task_exec_id); note_category_id references note_category(note_category_id);, type=schema_desc}, {text=The task_status table has columns: task_status_id, code, display_name, description, active, sort_order. Primary key: task_status_id., type=schema_desc}, {text=The task_status_workflow_type table has columns: task_status_workflow_type_id, workflow_type_id, task_status_id, active. Primary key: task_status_workflow_type_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id); task_status_id references task_status(task_status_id);, type=schema_desc}, {text=The task_type table has columns: task_type_id, code, display_name, description, active, sort_order. Primary key: task_type_id., type=schema_desc}, {text=The version_prefix table has columns: version_prefix_id, code, display_name, operational_region_id, active, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: version_prefix_id. Foreign keys: operational_region_id references operational_region(operational_region_id);, type=schema_desc}, {text=The work_order table has columns: work_order_id, asset_id, workflow_id, work_order_status_id, due_date, priority, created_time, created_by, last_modified_time, last_modified_by, work_order_key, internal_work_order_id, distribution_id, operational_group_id, assignee_id, job_type_id, facility_id, operational_region_id, language_id, additional_service, search_identifier_id, search_identifier_value, prop_ep, scrid, show_code, distribution_date, property_id, file_delivery, show_uuid, replacement_status, sub_edit_type, corporate_premiere_date, region_long_name, assessment_results, rally_movie_name, network_short_name, schedule_change, is_assigned, cut_id, rally_movie_id, is_manual_due_date, received_date, cut_type, accurate_player_url, status_before_cancel, include_edit, include_script. Primary key: work_order_id. Foreign keys: workflow_id references workflow(workflow_id); operational_group_id references operational_group(operational_group_id); asset_id references asset(asset_id); language_id references language(language_id); operational_region_id references operational_region(operational_region_id); job_type_id references job_type(job_type_id); sub_edit_type references sub_edit_type(sub_edit_type_id); additional_service references sub_type(sub_type_id); file_delivery references sub_type(sub_type_id); facility_id references facility(facility_id); work_order_status_id references work_order_status(work_order_status_id); distribution_id references distribution(distribution_id); search_identifier_id references asset_metadata_type(asset_metadata_type_id); assignee_id references assignee(assignee_id);, type=schema_desc}, {text=The work_order_metadata table has columns: work_order_id, work_order_metadata_type_id, value, created_time, created_by, last_modified_time, last_modified_by. Primary key: work_order_id, work_order_metadata_type_id. Foreign keys: work_order_metadata_type_id references work_order_metadata_type(work_order_metadata_type_id); work_order_id references work_order(work_order_id);, type=schema_desc}, {text=The work_order_metadata_type table has columns: work_order_metadata_type_id, code, display_name, description, active, sort_order. Primary key: work_order_metadata_type_id., type=schema_desc}, {text=The work_order_note table has columns: work_order_note_id, note_category_id, work_order_id, note, created_time, created_by, last_modified_time, last_modified_by, active. Primary key: work_order_note_id. Foreign keys: work_order_id references work_order(work_order_id); note_category_id references note_category(note_category_id);, type=schema_desc}, {text=The work_order_status table has columns: work_order_status_id, code, display_name, description, active, sort_order. Primary key: work_order_status_id., type=schema_desc}, {text=The work_order_status_workflow_type table has columns: work_order_status_workflow_type_id, workflow_type_id, work_order_status_id, active. Primary key: work_order_status_workflow_type_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id); work_order_status_id references work_order_status(work_order_status_id);, type=schema_desc}, {text=The workflow table has columns: workflow_id, workflow_type_id, code, display_name, version, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by. Primary key: workflow_id. Foreign keys: workflow_type_id references workflow_type(workflow_type_id);, type=schema_desc}, {text=The workflow_completion_status table has columns: workflow_completion_status_id, workflow_id, work_order_status_id, active, created_time, created_by, last_modified_time, last_modified_by. Primary key: workflow_completion_status_id. Foreign keys: workflow_id references workflow(workflow_id); work_order_status_id references work_order_status(work_order_status_id);, type=schema_desc}, {text=The workflow_input table has columns: workflow_input_id, workflow_id, name, type, is_key_field, default_value, created_time, created_by, last_modified_time, last_modified_by, workflow_task_id, key_ordinal, json_path. Primary key: workflow_input_id. Foreign keys: workflow_id references workflow(workflow_id); workflow_task_id references workflow_task(workflow_task_id);, type=schema_desc}, {text=The workflow_job_types table has columns: workflow_id, job_type_id. Primary key: workflow_id, job_type_id. Foreign keys: workflow_id references workflow(workflow_id); job_type_id references job_type(job_type_id);, type=schema_desc}, {text=The workflow_subscription table has columns: workflow_subscription_id, workflow_id, name, action_type, active, created_time, created_by, last_modified_time, last_modified_by, subscription_condition_id, field, operator, value. Primary key: workflow_subscription_id. Foreign keys: workflow_id references workflow(workflow_id);, type=schema_desc}, {text=The workflow_task table has columns: workflow_task_id, workflow_id, task_id, created_time, created_by, last_modified_time, last_modified_by, name, sort_order. Primary key: workflow_task_id. Foreign keys: workflow_id references workflow(workflow_id); task_id references task(task_id);, type=schema_desc}, {text=The workflow_task_dependency table has columns: workflow_task_id, depends_on. Foreign keys: depends_on references workflow_task(workflow_task_id); workflow_task_id references workflow_task(workflow_task_id);, type=schema_desc}, {text=The workflow_type table has columns: workflow_type_id, code, display_name, description, active, sort_order, created_time, created_by, last_modified_time, last_modified_by, short_name. Primary key: workflow_type_id., type=schema_desc}, {text=The workflow_workorder_map table has columns: workflow_id, work_order_id. Primary key: workflow_id. Foreign keys: work_order_id references work_order(work_order_id);, type=schema_desc}, {text=The workorder_completion_prediction table has columns: work_order_id, model_id, value, primary, created_time, created_by, last_modified_time, last_modified_by, prediction_id. Primary key: prediction_id. Foreign keys: work_order_id references work_order(work_order_id); model_id references ml_model(model_id);, type=schema_desc}]

